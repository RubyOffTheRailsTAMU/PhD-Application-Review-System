<div class="d-flex justify-content-center align-items-center" style="min-height: 60vh;">
<div class="container">
  <h2>My Applications</h2>
  <div class="btn-group" role="group" aria-label="Basic checkbox toggle button group">
    <input type="checkbox" class="btn-check" id="inprogress" autocomplete="on">
    <label class="btn btn-outline-primary" for="inprogress">In Progress</label>

    <input type="checkbox" class="btn-check" id="assigned" autocomplete="on">
    <label class="btn btn-outline-primary" for="assigned">Assigned</label>

    <input type="checkbox" class="btn-check" id="completed" autocomplete="on">
    <label class="btn btn-outline-primary" for="completed">Completed</label>
  </div>
  
  <table class="table">
    <!-- Table Header -->
    <thead>
      <tr>
        <th scope="col">Applicant</th>
        <th scope="col">Status</th>
        <th scope="col">Actions</th>
      </tr>
    </thead>
    <tbody id="applicationList">
      <% Review.where(user_netid: current_user.user_netid).each do |review| %>
        <tr class="clickable-row" data-status="<%= review.status.downcase %>" data-href="/application?cas_id=<%= review.applicant_id %>">
          <td><%= review.applicant_id %></td>
          <td>
          <span class="status-box <%= review.status.downcase %>"><%= review.status %></span>
          </td>
          <td><button type="button" class="btn btn-primary btn-sm">View</button></td>
        </tr>
      <% end %>
    </tbody>
  </table>
</div>
</div>
<script>
// Function to filter rows based on checkboxes
  function filterRows() {
    // Get the status checkboxes
    var checkboxes = document.querySelectorAll('.btn-check');
    var checkedStatuses = [];

    // Determine which checkboxes are checked
    checkboxes.forEach(function(checkbox) {
      if (checkbox.checked) {
        checkedStatuses.push(checkbox.getAttribute('id'));
      }
    });

    // Get all rows
    var rows = document.querySelectorAll('#applicationList tr');
    // Loop over rows and hide those that don't match the filter
    rows.forEach(function(row) {
      // Get the status of the row
      var status = row.getAttribute('data-status');

      // If the row's status is in the checkedStatuses array, show it; otherwise, hide it
      if (checkedStatuses.includes(status)) {
        row.style.display = "";
      } else {
        row.style.display = "none";
      }
    });
  }

  // Event listener for checkbox changes
  document.querySelectorAll('.btn-check').forEach(function(checkbox) {
    checkbox.addEventListener('change', filterRows);
  });

  // Initial call to filterRows to apply the filter when the page loads
  filterRows();
  document.addEventListener('DOMContentLoaded', function() {
    var rows = document.querySelectorAll('.clickable-row');
    rows.forEach(function(row) {
      row.addEventListener('click', function() {
        window.location.href = this.dataset.href;
      });
    });
  });
</script>

<style>
  /* Existing styles */

  /* Hover effect for rows */
  .clickable-row:hover {
    background-color: #f5f5f5; /* Light grey background on hover */
    cursor: pointer; /* Change cursor to pointer on hover */
  }

  /* Change text color on hover, if desired */
  .clickable-row:hover td {
    color: #010101; /* Dark text color on hover */
  }

  /* You can also add transition for smooth color change */
  .clickable-row {
    transition: background-color 0.3s, color 0.3s;
  }
</style>